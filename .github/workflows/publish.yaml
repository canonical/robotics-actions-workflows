name: publish

on:
  workflow_call:
    inputs:
      snap-track:
        default: latest
        description: Snap Store channel track use for publication.
        required: false
        type: string
    secrets:
      snapstore-login:
        description: Snap Store credential (see 'snapcraft export-login').
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-snap-file.outputs.matrix }}
    steps:

      - name: Check Snapstore login
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.snapstore-login }}
        run: |
          # Check if the key is empty
          if [ -z "${SNAPCRAFT_STORE_CREDENTIALS}" ]; then
            echo "Snapstore login is empty !"
            exit 1
          fi

      - name: Download snap artifact
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Retrieve snap file
        id: get-snap-file
        run: |
          files=$(find . -name '*.snap' -printf "\"%h/%f\",")
          echo "Files: ${files}"
          jsonfiles=$(echo "[${files%?}]")
          echo "JSON Files: ${jsonfiles}"
          echo "matrix=${jsonfiles}" >> "$GITHUB_OUTPUT"

      # - name: Prepare matrix
      #   id: prepare-matrix
      #   uses: ./.github/actions/_jsonify.yaml
      #   with:
      #     input: ${{ steps.get-snap-files.outputs.snap-files }}

  publish:
    needs: [prepare]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        snap: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:

      - name: Check Snapstore login
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.snapstore-login }}
        run: |
          # Check if the key is empty
          if [ -z "${SNAPCRAFT_STORE_CREDENTIALS}" ]; then
            echo "Snapstore login is empty !"
            exit 1
          fi

      - name: Download snap artifact
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Publish snap
        run: echo "Publishing '${{ matrix.snap }}'."

      # - name: Publish snap
      #   uses: snapcore/action-publish@v1
      #   with:
      #     snap: ${{ matrix.snap }}
      #     release: ${{ inputs.snap-track }}/${{ startsWith(github.ref, 'refs/tags/') && 'candidate' || 'edge'}}
