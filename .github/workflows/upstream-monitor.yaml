name: upstream-monitor

on:
  workflow_call:
    inputs:
      git-ref:
        default: '${{ github.ref }}'
        description: The branch to checkout. Defaults to the current git ref.
        required: false
        type: string
      issue-assignee:
        default: ''
        description: The issue assignee in the form '@name'. Defaults to no one.
        required: false
        type: string
      script-compare-versions:
        description: A bash script to compare versions.
        required: true
        type: string
      script-get-upstream-version:
        description: A bash script to retrieve the upstream version.
        required: true
        type: string
      snapcraft-source-subdir:
        default: '.'
        description: The path where to execute snapcraft. Defaults to '.'.
        required: false
        type: string

jobs:
  compare:
    runs-on: 'ubuntu-latest'
    permissions:
      issues: write
    steps:

      - name: Install dependencies
        run: sudo snap install yq

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: '${{ inputs.git-ref }}'

      - name: Find and parse snapcraft.yaml to retrieve the version
        id: parse
        env:
          project_root: ${{ inputs.snapcraft-source-subdir }}
        run: |
          # If no project path is specified, default to top-level of repo
          project_root="${project_root:-.}"

          valid_paths=(
            "${project_root}/.snapcraft.yaml"
            "${project_root}/build-aux/snap/snapcraft.yaml"
            "${project_root}/snap/snapcraft.yaml"
            "${project_root}/snapcraft.yaml"
          )

          for file in "${valid_paths[@]}"; do
            if [[ -f "$file" ]]; then
              yaml_path="$file"
            fi
          done

          if [[ -z "${yaml_path}" ]]; then
            echo "No snapcraft.yaml found"
            exit 1
          fi

          if yq '. | has("adopt-info")' "${yaml_path}" && yq '.parts[.adopt-info] | has("source-tag")' "${yaml_path}"; then
            version="$(yq '.parts[.adopt-info].source-tag' ${yaml_path})"
          else
            version="$(yq -r '.version' ${yaml_path})"
          fi

          if [ -z "${version}" ]; then exit 1; fi

          echo "snap-version=${version}" >> "$GITHUB_OUTPUT"

      - name: Create get-upstream-version script
        shell: bash
        run: |
          cat > get-upstream-version << 'EOF'
            ${{ inputs.script-get-upstream-version }}
          EOF
          chmod +x get-upstream-version

      - name: Run get-upstream-version script
        id: get-upstream-version
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euxo pipefail
          version="$(./get-upstream-version)"
          if [ -z "${version}" ]; then exit 1; fi
          echo "upstream-version=${version}" >> "$GITHUB_OUTPUT"

      - name: Create script-compare-versions script
        shell: bash
        run: |
          cat > compare-versions << 'EOF'
            ${{ inputs.script-compare-versions }}
          EOF
          chmod +x compare-versions

      - name: Compare versions
        id: compare
        continue-on-error: true
        env:
          SNAP_VERSION: "${{ steps.parse.outputs.snap-version }}"
          UPSTREAM_VERSION: "${{ steps.get-upstream-version.outputs.upstream-version }}"
        run: |
          set -euxo pipefail
          ./compare-versions "${UPSTREAM_VERSION}" "${SNAP_VERSION}"

      - name: Open issue
        if: steps.compare.outcome != 'success'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          search_issue="$(gh issue --repo ${{ github.repository }} list --state open \
            --search '${{ steps.get-upstream-version.outputs.upstream-version }} in:title' --json number)"

          if [[ ! "${search_issue}" =~ "number" ]]; then

            echo "Creating a new issue."

            extra_args=""
            if [ ! -z "${{ inputs.issue-assignee }}" ]; then
              extra_args="${extra_args} --assignee ${{ inputs.issue-assignee }}"
            fi

            echo -e "## Monitoring report\n\n" \
            "- Author: @${{ github.triggering_actor }}\n" \
            "- Branch: '${{ github.ref }}'\n" \
            "- Commit: ${{ github.sha }}\n" \
            "- Workflow Path: '${{ github.workflow_ref }}'\n\n" \
            "The workflow found a new version upstream: '${{ steps.get-upstream-version.outputs.upstream-version }}'.\n" \
            "Please consider upgrading the snap.\n\n" \
            "Workflow details at: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            | \
            gh issue --repo ${{ github.repository }} create \
              --title "[CI] Found version '${{ steps.get-upstream-version.outputs.upstream-version }}' upstream" \
              ${extra_args} \
              --body-file -
          else
            echo "Issue already opened."
          fi
